@page "/kitchen/ordersoverview"
@using Application.Models
@using Microsoft.EntityFrameworkCore
@using BlazorBootstrap
@attribute [Authorize]
@inject Application.BarDbContext DbContext
<h3>KitchenTableOrderEdit</h3>
@foreach (var order in _orders)
{
    <Card>
        <CardBody>
            <CardTitle>
                Bestellnummer: @order.Id | Tisch: @order.TableId
            </CardTitle>
            <SortableList TItem="OrderArticle"
                          Data="order.OrderArticles"
                          Context="item">
                <ItemTemplate>
                    @item.Article.Name @item.Amount x 
                    <Switch Label="Fertig?" Value="item.IsCompleted" ValueExpression="() => item.IsCompleted" ValueChanged="@(value => SwitchChanged(value, item))"/>
                </ItemTemplate>
            </SortableList>
        </CardBody>
    </Card>
}

@code {
    private List<Order> _orders { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Direkt aus DbContext Daten abrufen
        _orders = await DbContext.Orders.Include(item => item.OrderArticles).ThenInclude(item => item.Article).ToListAsync();
    }

    private async void SwitchChanged(bool value, OrderArticle orderArticle)
    {
        orderArticle.IsCompleted = value;
        Console.WriteLine("SwitchChanged");
        await DbContext.SaveChangesAsync();
        Console.WriteLine("SaveChangesAsync executed");
    }

}